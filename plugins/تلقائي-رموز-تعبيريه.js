import * as fs from 'fs';

const allowedEmojis = [
  '😂', '😍', '🥰', '😘', '❤️', '🤣', '👍', '😊', '🐦‍🔥', 
  '😁', '😄', '😃', '😅', '😆', '😉', '😋', '😎', '😐',
  '😑', '😶', '😏', '😣', '😥', '😮', '😯', '😴', '😌',
  '😛', '😜', '😝', '🤤', '😒', '😓', '😔', '😕', '🙃',
  '🤑', '😲', '😖', '😞', '😟', '😤', '😢', '😭', '😦',
  '😧', '😨', '😩', '😬', '😰', '😱', '😳', '😵', '😡',
  '😠', '🤯', '😷', '🤒', '🐦‍🔥', '🐦‍🔥', '🤧', '😇', '🤠',
  '🤡', '🤥', '🤫', '🤭', '🧐', '🤓', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥',
  '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥',
  '🐦‍🔥', '🤝', '✍️', '💪', '👀', '🌝', '🦸🏿‍♀️', '🦸🏿‍♀️', '🦸🏿‍♀️',
  '🐦‍🔥', '🐦‍🔥', '👶', '🧒', '👦', '👧', '🧑', '👨', '👩',
  '🧔', '👱', '🧓', '👴', '👵', '🙍', '🙎', '🙅', '🙆',
  '💁', '🙋', '🧏', '🙇', '🤦', '🤷', '🤴', '👸', '🤵',
  '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🐦‍🔥', '🧙', '🐦‍🔥', '🧛', '🧜', '🐦‍🔥',
  '🐦‍🔥', '🐦‍🔥', '🚶', '🏃', '💃', '🕺', '🧖', '🐦‍🔥', '🧘',
  '🐦‍🔥', '🐦‍🔥', '🎂', '🐦‍🔥', '🐦‍🔥', '💑', '🥺', '👤', '🐦‍🔥',
  '🦸', '🦹', '🐦‍🔥', '🐦‍🔥', '🐶', '🐱', '🐭', '🐦‍🔥', '🥂',
  '🦊', '🐻', '🐼', '🙊', '🐯', '🦁', '⚡', '🐦‍🔥', '🥂',
  '🐵', '🍻', '🎀', '🐦', '🐤', '🐥', '🦆', '🦅', '🥂',
  '🎀', '🐺', '🐦‍🔥', '🐴', '🦄', '🗿', '🐦‍🔥', '🦋', '🥂',
  '🍓', '🗿', '💎', '🍻', '💎', '🍓', '😑', '🐦‍🔥', '🥂',
  '🎀', '🐙', '🎸', '🕊️', '🔫', '🗿', '🐠', '🥂', '🥂',
  '🎀', '❄', '❄', '😑', '🔫', '❄️', '🌝', '🍒', '🥂',
  '🦣', '🍓', '🐦‍🔥', '🍓', '🔫', '🔫', '🍓', '🍓', '🥂',
  '🍒', '🍓', '🍓', '🐎', '🐦‍🔥', '🔫', '🔫', '🍓', '🐦‍🔥',
  '🍓', '🐕', '🐦‍🔥', '🦮', '🐕‍🦺', '🐈', '🍓', '🍓', '🍓',
  '🦚', '🦜', '🦢', '🫶', '🕊️', '🍒', '🦝', '🍓', '🍓',
  '🤥', '🦦', '🍓', '🐦‍🔥', '🐦‍🔥', '🌹', '🍒', '🍓', '⚡',
  '🐦‍🔥', '🐦‍🔥', '🌴', '🌱', '🌿', '☘️', '🍀', '🎍', '🎋',
  '🐦‍🔥', '🐦‍🔥', '🍁', '🐦‍🔥', '🐚', '🐦‍🔥', '🌾', '💐', '🍓',
  '🌹', '🥀', '🌺', '🌻', '🌼', '🌷', '⚽', '🏀', '🏈'
];

// دالة للتحقق من وجود رموز تعبيرية في النص
function hasEmoji(text) {
  const emojiRegex = /[\p{Emoji_Presentation}]/gu;
  return emojiRegex.test(text);
}

export async function before(m, { conn }) {
  if (m.isBaileys && m.fromMe) return true;
  if (!m.isGroup) return false;
  
  // تجاهل الرسائل التي تحتوي على رموز تعبيرية
  if (m.text && hasEmoji(m.text)) {
    return true;
  }

  // تجاهل الرسائل الفارغة أو غير النصية
  if (!m.text || m.text.trim() === '') {
    return true;
  }

  try {
    const randomEmoji = allowedEmojis[Math.floor(Math.random() * allowedEmojis.length)];
    
    await conn.sendMessage(m.chat, {
      react: {
        text: randomEmoji,
        key: m.key
      }
    });

  } catch (error) {
    console.error('Error reacting to message:', error);
  }

  return true;
}