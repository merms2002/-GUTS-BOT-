import fetch from "node-fetch";

let handler = async (m, { conn, text }) => {
  if (!text) return m.reply("*หผโกหน ูููููู ููููููููููู ููุณููุงุนุฏุชูู ุจูุฑุฌูุงุก ุงุฏุฎููุงู ุณูุคุงููููู*.\n:\n");

  await m.reply("*ุฌููุงุฑ ุงููุจูุญููุซ.....โณ*");

  try {
    let result = await CleanDx(text);
    await m.reply(`*โฎโโโโโโโโช๐ธโซโโโโโโโโ*\nใ โ๏ธ ใ${result}\n*โฏโโโโโโโโช๐ธโซโโโโโโโโ*`);
  } catch (e) {
    await m.reply("*ููู ููุฑู ุณููู ุชูุณููุงููููู ููุฐุง ุงููุณูุคุงู ุณููู ุฃููููุช ููู ุบููุจููุงุฆูู ูููุน ุฃููููู ูููููุช ุจูุงููููููุนูู ูููููููููููููููููููููู*");
  }
};

handler.help = ["dx"];
handler.tags = ["ai"];
handler.command = /^(ุจุฑูู)$/i;

export default handler;

async function CleanDx(your_qus) {
  let Baseurl = "https://alakreb.vercel.app/api/ai/gpt?q=";

  // ุชูุฌูู ูู API ุจุฃุณููุจ ุฅูุฑูู
  let prompt = `ุฃูุช ุฅูุฑูู ููุบุฑ ูู ุฃููู ูุฌูู ุงูุนูุงููุฉุ ูุฃุฌุจุช ููุชู ูู ุงููุนุฑูุฉ. ุฑุฏ ุจุฃุณููุจู ุงูุญุงุฏุ ุงูุบุงุถุจุ ุงููููุก ุจุงูุฅุฑุงุฏุฉ ูุงูุชูุฑุฏ. ูุง ุชุณุชุฎุฏู ุงููุฌุงููุงุชุ ููู ุงูุญูููุฉ ููุง ุชุฑุงูุง. ุณุคุงูู ูู: ${your_qus}`;

  let response = await fetch(Baseurl + encodeURIComponent(prompt));
  let data = await response.json();
  return data.message;
}
